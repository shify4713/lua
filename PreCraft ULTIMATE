-- PreCraft ULTIMATE (2025) — финальная версия, все востребованные функции, совместим с Lua 5.2 + OpenOS 1.6.1
local component = require("component")
local event = require("event")
local fs = require("filesystem")
local serialization = require("serialization")
local unicode = require("unicode")
local term = require("term")
local computer = require("computer")
local me = assert(component.me_interface, "me_interface not found")
local gpu = assert(component.gpu, "GPU not found")

-- === Настройки ===
local WIDTH, HEIGHT = 160, 50
local ADM = {["shify4713"]=true, ["LiwMorgan"]=true, ["KReaTlVNuY"]=true, ["4ertik_"]=true}
local PATH = "/home/BD.txt"

local COLORS = {
  bg = 0x23272e, fg = 0xE6EDF3, border = 0x2866b2, err = 0xFF3C3C,
  ok = 0x7CFC00, warn = 0xFFD700, info = 0x66FFFF,
  select_bg = 0x3A5068, select_fg = 0xF1F1F1,
  btn_bg = 0x2980b9, btn_fg = 0xf7f7f7, btn_act = 0x155a8a,
  btn_border = 0x2980b9, btn_shadow = 0x1d2731,
  tab_on = 0x2980b9, tab_off = 0x23272e, tab_fg = 0xFFFFFF,
  input_bg = 0x1c232b, input_fg = 0xA4FFFA, input_border = 0x2980b9,
  log_bg = 0x242b33, log_ok = 0x7CFC00, log_warn = 0xFFD700, log_err = 0xFF3C3C, log_info = 0x66FFFF,
  log_time = 0x474a4e, log_txt = 0xE6EDF3, search_bg = 0x26324a, search_icon = 0x50B9FF
}

local function clamp(val, min, max) return math.max(min, math.min(val, max)) end
local function save(tbl)
  local f = io.open(PATH, "w")
  if f then f:write("return "..serialization.serialize(tbl)); f:close() end
end
local function load()
  if not fs.exists(PATH) then return {} end
  local f = io.open(PATH, "r")
  if not f then return {} end
  local dat = f:read("*a"); f:close()
  local ok, t = pcall(function() return load("return "..dat)() end)
  if ok then return t else return {} end
end

gpu.setResolution(WIDTH, HEIGHT)

local state = {
  tab = 1, tabs = {"Главная", "Изменить", "Логи"},
  data = {}, logs = {}, select = 1, scroll = 1, search = "",
  input = {active=false, value="", prompt="", action=nil, next=nil, params={}},
  go = false, error = nil, filtered = {}, maxscroll = 1,
  redraw = true, hover = {btn=nil, item=nil, tab=nil, search=false},
  logScroll = 1, btns = {}, itemHit = {}, chBtnHit={}, searchHit=nil
}

-- === Логирование (время по МСК) ===
local function now_msk()
  local utc = os.time(os.date("!*t"))
  local msk = utc + 3*3600
  local t = os.date("*t", msk)
  return string.format("%02d:%02d:%02d", t.hour, t.min, t.sec)
end
local function log(kind, msg)
  table.insert(state.logs, {kind=kind, time=now_msk(), msg=msg})
  if #state.logs>40 then table.remove(state.logs,1) end
  state.redraw=true
end

-- === UI helpers ===
local function btn(x,y,w,h,str,active,hover,pressed)
  local bg = COLORS.btn_bg
  if pressed then bg = 0x368ef0
  elseif active then bg = COLORS.btn_act
  elseif hover then bg = 0x6ec6ff
  end
  gpu.setBackground(bg)
  gpu.setForeground(COLORS.btn_fg)
  local i
  for i=0,h-1 do gpu.fill(x, y+i, w, 1, " ") end
  gpu.setForeground(COLORS.btn_border)
  gpu.set(x, y, "╭"..string.rep("─",w-2).."╮")
  gpu.set(x, y+h-1, "╰"..string.rep("─",w-2).."╯")
  for i=1,h-2 do gpu.set(x, y+i, "│"); gpu.set(x+w-1, y+i, "│") end
  gpu.setBackground(bg)
  gpu.setForeground(COLORS.btn_fg)
  gpu.set(x+math.floor((w-unicode.len(str))/2), y+math.floor(h/2), str)
  return {x1=x,x2=x+w-1,y1=y,y2=y+h-1}
end

local function renderButtons()
  local y = 44
  local btns = {
    {"Добавить", "add", 7, y, false},
    {"Изменить", "edit", 27, y, false},
    {"Удалить", "del", 47, y, false},
    {(state.go and "⏸ Остановить" or "▶ Запуск"), "toggleGo", 67, y, state.go},
  }
  state.btns = {}
  for i,b in ipairs(btns) do
    local hover = (state.hover.btn == i)
    local pressed = (state.hover.pressed and state.hover.btn == i)
    local box = btn(b[3], b[4], 18, 3, b[1], b[5], hover, pressed)
    box.action = b[2]; box.idx=i
    state.btns[#state.btns+1]=box
  end
end

local function border(x,y,w,h,col)
  gpu.setForeground(col or COLORS.border)
  gpu.set(x,y,"╭"..string.rep("─",w-2).."╮")
  gpu.set(x,y+h-1,"╰"..string.rep("─",w-2).."╯")
  local i
  for i=1,h-2 do
    gpu.set(x,y+i,"│"); gpu.set(x+w-1,y+i,"│")
  end
  gpu.setForeground(COLORS.fg)
end

local function drawTabs()
  local tx = 5
  state.tabHit = {}
  for i,tab in ipairs(state.tabs) do
    local active = (state.tab==i)
    local bg = active and COLORS.tab_on or COLORS.tab_off
    gpu.setBackground(bg)
    gpu.setForeground(COLORS.tab_fg)
    gpu.set(tx,4," "..tab.." ")
    state.tabHit[#state.tabHit+1] = {x1=tx, x2=tx+unicode.len(tab)+1, y=4, idx=i}
    tx = tx + unicode.len(tab)+5
  end
end

local function renderInputModal()
  if not state.input.active then return end
  local w,h = 60,9
  local x,y = math.floor(WIDTH/2-w/2), math.floor(HEIGHT/2-h/2)
  gpu.setBackground(COLORS.input_bg)
  gpu.fill(x,y,w,h," ")
  border(x,y,w,h,COLORS.input_border)
  gpu.setForeground(COLORS.input_fg)
  gpu.set(x+3,y+2,state.input.prompt)
  gpu.set(x+3,y+4,state.input.value)
  -- Курсор
  gpu.set(x+3+unicode.len(state.input.value),y+4,"_")
  gpu.setBackground(COLORS.bg)
end

local function renderSearch()
  local sx,sy = 7,41
  gpu.setBackground(COLORS.search_bg)
  gpu.fill(sx,sy,60,3," ")
  border(sx,sy,60,3,COLORS.btn_border)
  gpu.setForeground(COLORS.search_icon)
  gpu.set(sx+2,sy+1,"⦾")
  gpu.setForeground(COLORS.fg)
  gpu.set(sx+5,sy+1,state.search=="" and "Поиск по названию..." or state.search)
  gpu.setBackground(COLORS.bg)
  state.searchHit = {x1=sx,y1=sy,x2=sx+59,y2=sy+2}
end

local function renderGrid()
  -- Заголовок
  gpu.setBackground(COLORS.tab_on)
  gpu.setForeground(0xffffff)
  gpu.set(8,7,"Название")
  gpu.set(42,7,"Кол-во")
  gpu.set(56,7,"Крафт")
  gpu.setBackground(COLORS.bg)
  gpu.setForeground(COLORS.fg)
  -- Фильтрация
  local filtered={}, search=unicode.lower(state.search or "")
  for i,v in ipairs(state.data) do
    if search=="" or unicode.lower(v.name or ""):find(search) then table.insert(filtered,v) end
  end
  state.filtered=filtered
  -- Сетка
  local show = 30
  state.maxscroll = math.max(1, #filtered-show+1)
  state.select = clamp(state.select, 1, #filtered)
  state.scroll = clamp(state.scroll, 1, state.maxscroll)
  state.itemHit = {}
  local i
  for i=state.scroll,math.min(#filtered,state.scroll+show-1) do
    local v=filtered[i]; local y=7+(i-state.scroll)+1
    local sel = (i==state.select)
    gpu.setBackground(sel and COLORS.select_bg or COLORS.bg)
    gpu.setForeground(sel and COLORS.select_fg or COLORS.fg)
    gpu.set(8,y,v.name or "")
    gpu.set(42,y,tostring(v.count or ""))
    gpu.set(56,y,tostring(v.craftSize or ""))
    state.itemHit[#state.itemHit+1]={x1=8,x2=72,y=y,idx=i}
  end
  gpu.setBackground(COLORS.bg)
  gpu.setForeground(COLORS.fg)
end

local function renderLogs()
  local x0,y0,w0,h0 = 80,6,78,38
  gpu.setBackground(COLORS.log_bg)
  gpu.fill(x0,y0,w0,h0," ")
  border(x0,y0,w0,h0,COLORS.tab_on)
  gpu.setForeground(COLORS.tab_on)
  gpu.set(x0+3,y0," ЛОГИ АВТОКРАФТА ")
  gpu.setForeground(COLORS.fg)
  local logs = state.logs
  local show = h0-4
  local maxScroll = math.max(1,#logs-show+1)
  state.logScroll = clamp(state.logScroll, 1, maxScroll)
  local i
  for i=state.logScroll,math.min(#logs,state.logScroll+show-1) do
    local lg = logs[i]
    local y = y0+1+(i-state.logScroll)
    local col = lg.kind=="ok" and COLORS.log_ok or lg.kind=="warn" and COLORS.log_warn or lg.kind=="err" and COLORS.log_err or lg.kind=="info" and COLORS.log_info or COLORS.log_txt
    gpu.setForeground(COLORS.log_time)
    gpu.set(x0+2, y, "["..lg.time.."] ")
    gpu.setForeground(col)
    gpu.set(x0+12, y, lg.msg)
  end
  gpu.setBackground(COLORS.bg)
  gpu.setForeground(COLORS.fg)
end

local function renderEditPanel()
  if state.tab ~= 2 or not state.filtered[state.select] then return end
  local v = state.filtered[state.select]
  local x,y,w,h = 84,13,65,14
  gpu.setBackground(COLORS.input_bg)
  gpu.fill(x,y,w,h," ")
  border(x,y,w,h,COLORS.input_border)
  gpu.setForeground(COLORS.input_fg)
  gpu.set(x+3,y+2,"Название: "..(v.name or ""))
  gpu.set(x+3,y+4,"Кол-во: "..tostring(v.count or ""))
  gpu.set(x+3,y+6,"Размер крафта: "..tostring(v.craftSize or ""))
  state.chBtnHit={}
  local cx = x+3; local cy = y+9
  local arr = {
    {"Изменить имя","name",cx,cy},
    {"Изм. кол-во","count",cx+22,cy},
    {"Изм. крафт","craft",cx+44,cy},
    {"Назад","main",cx+60,cy}
  }
  local i
  for i=1,#arr do
    local hover = (state.hover.btn == i)
    local box = btn(arr[i][3],arr[i][4],20,3,arr[i][1],false,hover)
    box.action=arr[i][2];box.idx=i
    state.chBtnHit[#state.chBtnHit+1]=box
  end
end

local function render()
  gpu.setBackground(COLORS.bg); gpu.setForeground(COLORS.fg)
  gpu.fill(1,1,WIDTH,HEIGHT," ")
  border(1,1,WIDTH,HEIGHT,COLORS.border)
  gpu.set(math.floor(WIDTH/2-10),2,"PreCraft ULTIMATE")
  drawTabs()
  renderButtons()
  if state.tab==1 then renderGrid(); renderSearch(); renderLogs()
  elseif state.tab==2 then renderEditPanel(); renderLogs()
  elseif state.tab==3 then renderLogs()
  end
  if state.input.active then renderInputModal() end
  if state.error then
    gpu.setForeground(COLORS.err)
    gpu.set(6,HEIGHT-1,"Ошибка: "..tostring(state.error))
    gpu.setForeground(COLORS.fg)
  end
end

-- === Автокрафт без ограничений CPU ===
local function request_craft_safe(craftable, count, item_name)
  local success = false
  while not success do
    local cpus = me.getCpus()
    local found = false
    local i
    for i=1,#cpus do if not cpus[i].busy then found = true; break end end
    if found then
      local ok, msg = pcall(function() return craftable.request(count, false) end)
      if ok then log("ok","Заказано: "..item_name.." x"..count); success = true
      else
        if tostring(msg):find("missing resources") then log("warn","Не хватает для "..item_name); return false
        elseif tostring(msg):find("no recipe") then log("err","Нет рецепта "..item_name); return false
        else log("err","Ошибка: "..tostring(msg)); return false end
      end
    else
      log("info","Ожидание свободного CPU для "..item_name)
      os.sleep(1)
    end
  end
  return true
end

local function checkCraft()
  if not state.go then return end
  local i
  for i=1,#state.data do
    local v = state.data[i]
    local itemsMe=me.getItemDetail({id=v.id,dmg=v.dmg})
    local qty=itemsMe and itemsMe.basic().qty or 0
    local needAll=(v.count or 0)-qty
    if needAll>0 then
      local craftables=me.getCraftables({name=v.id,damage=v.dmg})
      if craftables.n and craftables.n>=1 then
        local count=math.min(needAll,v.craftSize or needAll)
        request_craft_safe(craftables[1], count, v.name or "?")
        os.sleep(0.1)
      else
        log("err","Нет рецепта "..(v.name or "?"))
      end
    end
  end
end

-- === Диалоговые окна ===
local function askInput(prompt,action,default,nextFunc,params)
  state.input={active=true,value=default or "",prompt=prompt,action=action,next=nextFunc or nil,params=params or {}}
  state.redraw=true
end
local function resetInput() state.input={active=false,value="",prompt="",action=nil, next=nil, params={}} end

local function commitInput()
  if state.input.action == "add_name" then
    askInput("Сколько поддерживать в наличии?", "add_count", "1", nil, {name=state.input.value})
  elseif state.input.action == "add_count" then
    askInput("Максимальный размер крафта?", "add_craft", "1", nil, {name=state.input.params.name, count=tonumber(state.input.value)})
  elseif state.input.action == "add_craft" then
    local item = me.getStackInSlot(1)
    if not item then
      state.error = "Положите предмет в 1-й слот ME-интерфейса!"
      resetInput(); state.redraw=true; return
    end
    table.insert(state.data, {
      name = state.input.params.name,
      id = item.id,
      dmg = item.dmg,
      count = state.input.params.count,
      craftSize = tonumber(state.input.value)
    })
    save(state.data)
    log("ok","Добавлен: "..state.input.params.name)
    resetInput()
    state.redraw=true
  elseif state.input.action == "edit_name" then
    local v = state.filtered[state.select]
    if v then v.name = state.input.value end
    save(state.data)
    log("info","Имя изменено")
    resetInput(); state.redraw=true
  elseif state.input.action == "edit_count" then
    local v = state.filtered[state.select]
    if v then v.count = tonumber(state.input.value) end
    save(state.data)
    log("info","Кол-во изменено")
    resetInput(); state.redraw=true
  elseif state.input.action == "edit_craft" then
    local v = state.filtered[state.select]
    if v then v.craftSize = tonumber(state.input.value) end
    save(state.data)
    log("info","Размер крафта изменён")
    resetInput(); state.redraw=true
  elseif state.input.action == "search" then
    state.search=state.input.value
    resetInput(); state.redraw=true
  end
end

local function handleKeyDown(_,_,char,code,playerName)
  if not ADM[playerName or ""] then return end
  if state.input.active then
    if code==13 then commitInput()
    elseif code==8 then
      if #state.input.value>0 then
        state.input.value=unicode.sub(state.input.value,1,unicode.len(state.input.value)-1)
      end
    elseif code==27 then resetInput(); state.redraw=true
    elseif char and type(char)=="string" and unicode.len(state.input.value)<48 then
      state.input.value=state.input.value..char
    end
    state.redraw=true
  end
end

local function hoverUpdate(x, y)
  state.hover = {btn=nil, item=nil, tab=nil, search=false}
  for i,b in ipairs(state.btns) do
    if x>=b.x1 and x<=b.x2 and y>=b.y1 and y<=b.y2 then state.hover.btn=i; break end
  end
  for _,t in ipairs(state.tabHit or {}) do
    if y==t.y and x>=t.x1 and x<=t.x2 then state.hover.tab=t.idx; break end
  end
  if state.searchHit and x>=state.searchHit.x1 and x<=state.searchHit.x2 and y>=state.searchHit.y1 and y<=state.searchHit.y2 then
    state.hover.search=true
  end
end

local function handleTouch(_,_,x,y,_,playerName)
  if not ADM[playerName or ""] then return end
  hoverUpdate(x,y)
  for _,t in ipairs(state.tabHit or {}) do
    if y==t.y and x>=t.x1 and x<=t.x2 then state.tab=t.idx; state.redraw=true; return end
  end
  if state.tab==1 and state.searchHit and x>=state.searchHit.x1 and x<=state.searchHit.x2 and y>=state.searchHit.y1 and y<=state.searchHit.y2 then
    askInput("Поиск:","search",state.search)
    return
  end
  if state.tab==1 and state.btns then
    for _,b in ipairs(state.btns) do
      if x>=b.x1 and x<=b.x2 and y>=b.y1 and y<=b.y2 then
        state.hover.btn=b.idx; state.hover.pressed=true; state.redraw=true
        os.sleep(0.08)
        state.hover.pressed=false
        if b.action=="add" then
          askInput("Имя предмета:","add_name","")
        elseif b.action=="edit" and state.filtered[state.select] then
          state.tab=2; state.redraw=true
        elseif b.action=="del" and state.filtered[state.select] then
          table.remove(state.data,state.select)
          save(state.data)
          log("warn","Удалён предмет")
          state.redraw=true
        elseif b.action=="toggleGo" then
          state.go=not state.go; log("info","Режим: "..(state.go and "GO" or "STOP"))
          state.redraw=true
        end
        return
      end
    end
  end
  if state.tab==1 and state.itemHit then
    for _,b in ipairs(state.itemHit) do
      if x>=b.x1 and x<=b.x2 and y==b.y then state.select=b.idx; state.redraw=true; return end
    end
  end
  if state.tab==2 and state.chBtnHit then
    for _,b in ipairs(state.chBtnHit) do
      if x>=b.x1 and x<=b.x2 and y>=b.y1 and y<=b.y2 then
        if b.action=="main" then state.tab=1; state.redraw=true
        elseif b.action=="name" then askInput("Новое имя:","edit_name",state.filtered[state.select].name)
        elseif b.action=="count" then askInput("Новое количество:","edit_count",tostring(state.filtered[state.select].count))
        elseif b.action=="craft" then askInput("Новый размер крафта:","edit_craft",tostring(state.filtered[state.select].craftSize))
        end
        return
      end
    end
  end
end

local function handleScroll(_,_,x,y,dir,playerName)
  if not ADM[playerName or ""] then return end
  if state.input.active then return end
  if state.tab==1 and state.maxscroll>1 then
    if dir==1 and state.scroll>1 then state.scroll=state.scroll-1; state.redraw=true
    elseif dir==-1 and state.scroll<state.maxscroll then state.scroll=state.scroll+1; state.redraw=true end
  elseif state.tab==3 or (state.tab==1 or state.tab==2) then
    local logs = state.logs
    local show = 38-4
    local maxScroll = math.max(1,#logs-show+1)
    if dir==1 and state.logScroll>1 then state.logScroll=state.logScroll-1; state.redraw=true
    elseif dir==-1 and state.logScroll<maxScroll then state.logScroll=state.logScroll+1; state.redraw=true end
  end
end

-- === Главный цикл ===
local function mainloop()
  state.data=load()
  event.listen("touch",handleTouch)
  event.listen("key_down",handleKeyDown)
  event.listen("scroll",handleScroll)
  local lastCheck=os.clock()
  while true do
    if state.redraw then render(); state.redraw=false end
    os.sleep(0.02)
    if state.go and os.clock()-lastCheck>6 then checkCraft(); lastCheck=os.clock() end
  end
end

local ok,err=pcall(mainloop)
if not ok then
  gpu.setBackground(COLORS.bg)
  gpu.setForeground(COLORS.err)
  gpu.set(2,HEIGHT-1,"Ошибка: "..tostring(err))
end
