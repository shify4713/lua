-- PreCraft ULTIMATE (Lua 5.2, OpenOS 1.6.1 compatible, NO "unexpected symbol near '='")
local component = require("component")
local event = require("event")
local fs = require("filesystem")
local serialization = require("serialization")
local unicode = require("unicode")
local term = require("term")
local computer = require("computer")
local me = assert(component.me_interface, "me_interface not found")
local gpu = assert(component.gpu, "GPU not found")

-- === Настройки ===
local WIDTH, HEIGHT = 160, 50
local ADM = {["shify4713"]=true, ["LiwMorgan"]=true, ["KReaTlVNuY"]=true, ["4ertik_"]=true}
local PATH = "/home/BD.txt"

local COLORS = {
  bg = 0x23272e, fg = 0xE6EDF3, border = 0x2866b2, err = 0xFF3C3C,
  ok = 0x7CFC00, warn = 0xFFD700, info = 0x66FFFF,
  select_bg = 0x3A5068, select_fg = 0xF1F1F1,
  btn_bg = 0x2980b9, btn_fg = 0xf7f7f7, btn_act = 0x155a8a,
  btn_border = 0x2980b9, btn_shadow = 0x1d2731,
  tab_on = 0x2980b9, tab_off = 0x23272e, tab_fg = 0xFFFFFF,
  input_bg = 0x1c232b, input_fg = 0xA4FFFA, input_border = 0x2980b9,
  log_bg = 0x242b33, log_ok = 0x7CFC00, log_warn = 0xFFD700, log_err = 0xFF3C3C, log_info = 0x66FFFF,
  log_time = 0x474a4e, log_txt = 0xE6EDF3, search_bg = 0x26324a, search_icon = 0x50B9FF
}

local function clamp(val, min, max) return math.max(min, math.min(val, max)) end
local function save(tbl)
  local f = io.open(PATH, "w")
  if f then f:write("return "..serialization.serialize(tbl)); f:close() end
end
local function load()
  if not fs.exists(PATH) then return {} end
  local f = io.open(PATH, "r")
  if not f then return {} end
  local dat = f:read("*a"); f:close()
  local ok, t = pcall(function() return load("return "..dat)() end)
  if ok then return t else return {} end
end
gpu.setResolution(WIDTH, HEIGHT)

local state = {
  tab = 1, tabs = {"Главная", "Изменить", "Логи"},
  data = {}, logs = {}, select = 1, scroll = 1, search = "",
  input = {active=false, value="", prompt="", action=nil},
  go = false, error = nil, filtered = {}, maxscroll = 1,
  redraw = true, hover = {btn=nil, item=nil, tab=nil, search=false},
  logScroll = 1, btns = {}
}

local function now()
  local t=os.date("*t")
  return string.format("%02d:%02d:%02d",t.hour,t.min,t.sec)
end
local function log(kind, msg)
  table.insert(state.logs, {kind=kind, time=now(), msg=msg})
  if #state.logs>40 then table.remove(state.logs,1) end
  state.redraw=true
end

local function btn(x,y,w,h,str,active,hover,pressed)
  local bg = COLORS.btn_bg
  if pressed then bg = 0x368ef0
  elseif active then bg = COLORS.btn_act
  elseif hover then bg = 0x6ec6ff
  end
  gpu.setBackground(bg)
  gpu.setForeground(COLORS.btn_fg)
  local i
  for i=0,h-1 do gpu.fill(x, y+i, w, 1, " ") end
  gpu.setForeground(COLORS.btn_border)
  gpu.set(x, y, "╭"..string.rep("─",w-2).."╮")
  gpu.set(x, y+h-1, "╰"..string.rep("─",w-2).."╯")
  for i=1,h-2 do gpu.set(x, y+i, "│"); gpu.set(x+w-1, y+i, "│") end
  gpu.setBackground(bg)
  gpu.setForeground(COLORS.btn_fg)
  gpu.set(x+math.floor((w-unicode.len(str))/2), y+math.floor(h/2), str)
  return {x1=x,x2=x+w-1,y1=y,y2=y+h-1}
end

local function renderButtons()
  local y = 44
  local btns = {
    {"Добавить", "add", 7, y, false},
    {"Изменить", "edit", 24, y, false},
    {"Удалить", "del", 41, y, false},
    {(state.go and "⏸ Остановить" or "▶ Запуск"), "toggleGo", 58, y, state.go},
    {"Выход", "exit", 75, y, false}
  }
  state.btns = {}
  local i
  for i,b in ipairs(btns) do
    local hover = (state.hover.btn == i)
    local pressed = (state.hover.pressed and state.hover.btn == i)
    local box = btn(b[3], b[4], 15, 3, b[1], b[5], hover, pressed)
    box.action = b[2]; box.idx=i
    state.btns[#state.btns+1]=box
  end
end

local function render()
  gpu.setBackground(COLORS.bg); gpu.setForeground(COLORS.fg)
  gpu.fill(1,1,WIDTH,HEIGHT," ")
  renderButtons()
end

-- === БЕЗ ОГРАНИЧЕНИЯ CPU: ждёт свободный ===
local function request_craft_safe(craftable, count, item_name)
  local success = false
  while not success do
    local cpus = me.getCpus()
    local found = false
    local i
    for i=1,#cpus do if not cpus[i].busy then found = true; break end end
    if found then
      local ok, msg = pcall(function() return craftable.request(count, false) end)
      if ok then log("ok","Заказано: "..item_name.." x"..count); success = true
      else
        if tostring(msg):find("missing resources") then log("warn","Не хватает для "..item_name); return false
        elseif tostring(msg):find("no recipe") then log("err","Нет рецепта "..item_name); return false
        else log("err","Ошибка: "..tostring(msg)); return false end
      end
    else
      log("info","Ожидание свободного CPU для "..item_name)
      os.sleep(1)
    end
  end
  return true
end

local function checkCraft()
  if not state.go then return end
  local i
  for i=1,#state.data do
    local v = state.data[i]
    local itemsMe=me.getItemDetail({id=v.id,dmg=v.dmg})
    local qty=itemsMe and itemsMe.basic().qty or 0
    local needAll=(v.count or 0)-qty
    if needAll>0 then
      local craftables=me.getCraftables({name=v.id,damage=v.dmg})
      if craftables.n and craftables.n>=1 then
        local count=math.min(needAll,v.craftSize or needAll)
        request_craft_safe(craftables[1], count, v.name or "?")
        os.sleep(0.1)
      else
        log("err","Нет рецепта "..(v.name or "?"))
      end
    end
  end
end

local function handleTouch(_,_,x,y,_,playerName)
  if not ADM[playerName or ""] then return end
  local idx
  for idx=1,#state.btns do
    local b = state.btns[idx]
    if x>=b.x1 and x<=b.x2 and y>=b.y1 and y<=b.y2 then
      state.hover.btn=idx; state.hover.pressed=true; state.redraw=true
      os.sleep(0.08)
      state.hover.pressed=false
      if b.action=="add" then log("info","Добавление предмета (пример)")
      elseif b.action=="edit" then log("info","Редактирование (пример)")
      elseif b.action=="del" then log("warn","Удаление (пример)")
      elseif b.action=="toggleGo" then state.go=not state.go; log("info","Режим: "..(state.go and "GO" or "STOP"))
      elseif b.action=="exit" then os.exit()
      end
      state.redraw=true
      break
    end
  end
end

local function mainloop()
  state.data=load()
  event.listen("touch",handleTouch)
  local lastCheck=os.clock()
  while true do
    if state.redraw then render(); state.redraw=false end
    os.sleep(0.02)
    if state.go and os.clock()-lastCheck>5 then checkCraft(); lastCheck=os.clock() end
  end
end

local ok,err=pcall(mainloop)
if not ok then
  gpu.setBackground(COLORS.bg)
  gpu.setForeground(COLORS.err)
  gpu.set(2,HEIGHT-1,"Ошибка: "..tostring(err))
end
