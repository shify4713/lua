-- oc.lua – улучшенная библиотека для PreCraft
local component = require("component")
local fs = require("filesystem")
local term = require("term")
local serialization = require("serialization")

local oc = {}
local g = component.gpu

-- Сохранение таблицы в файл (используется для BD.txt)
function oc.savef(filename, tbl)
  local file, err = io.open(filename, "w")
  if not file then error("Ошибка записи файла: " .. err) end
  file:write(serialization.serialize(tbl))
  file:close()
  return true
end

-- Загрузка таблицы из файла
function oc.loadf(filename)
  if not fs.exists(filename) then return {} end
  local file = io.open(filename, "r")
  local data = file:read("*a")
  file:close()
  return serialization.unserialize(data) or {}
end

-- Рисование кнопки с центровкой текста
function oc.drawbutton(x, y, w, h, fg, bg, text)
  g.setBackground(bg or 0x000000)
  g.setForeground(fg or 0xFFFFFF)
  g.fill(x, y, w, h, " ")
  local tx = x + math.floor((w - unicode.len(text)) / 2)
  local ty = y + math.floor(h / 2)
  g.set(tx, ty, text)
end

-- Рисование вертикального скроллбара
function oc.drawscroll(x, y, w, h, scroll, total, colorBack, colorBorder)
  g.setBackground(colorBack or 0x1e1e1e)
  g.fill(x, y, w, h, " ")
  g.setBackground(colorBorder or 0x004575)
  g.fill(x, y, w, 1, " ")
  g.fill(x, y + h - 1, w, 1, " ")
  if total > h then
    local handleHeight = math.max(1, math.floor((h / total) * h))
    local pos = math.floor(((scroll - 1) / (total - h)) * (h - handleHeight)) + y
    g.setBackground(0x00ffff)
    g.fill(x, pos, w, handleHeight, " ")
  end
end

-- Вывод текста с выравниванием вправо (на заданной строке)
function oc.right(x, y, text)
  local w, _ = g.getResolution()
  local tx = w - unicode.len(text) + 1
  g.set(tx, y, text)
end

return oc
