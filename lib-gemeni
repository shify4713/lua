local fs = require("filesystem")
local unicode = require("unicode")
local gpu = require("component").gpu
local serialization = require("serialization")

local M = {}

function M.savef(path, tbl)
    if type(path) ~= "string" or type(tbl) ~= "table" then
        error("Неверные аргументы: path должен быть строкой, tbl должен быть таблицей")
    end
    local ok, ser = pcall(serialization.serialize, tbl)
    if not ok then error("Ошибка сериализации: " .. tostring(ser)) end
    local f, err = io.open(path, "w")
    if not f then error("Не могу открыть файл для записи: " .. err) end
    f:write(ser)
    f:close()
end

function M.loadf(path)
    if type(path) ~= "string" then
        error("Неверный аргумент: path должен быть строкой")
    end
    if not fs.exists(path) then return {} end
    local f, err = io.open(path, "r")
    if not f then error("Не могу открыть файл: " .. err) end
    local data = f:read("*a")
    f:close()
    local ok, tbl = pcall(serialization.unserialize, data)
    if not ok then error("Ошибка десериализации: " .. tostring(tbl)) end
    return tbl or {}
end

function M.drawText(x, y, text, color, shadow)
    if type(x) ~= "number" or type(y) ~= "number" or type(text) ~= "string" then
        error("Неверные аргументы: x, y - числа, text - строка")
    end
    local originalBg = gpu.getBackground()
    color = color or 0xFFFFFF
    gpu.setForeground(color)
    if shadow then
        gpu.setBackground(0x282A36)
        gpu.set(x + 1, y + 1, text)
    end
    gpu.setBackground(originalBg)
    gpu.set(x, y, text)
end

function M.addLog(logs, text, lvl)
    if type(logs) ~= "table" or type(text) ~= "string" then
        error("Неверные аргументы: logs - таблица, text - строка")
    end
    lvl = lvl or "INFO"
    local t = string.format("[%s] %s", lvl, text)
    table.insert(logs, t)
    while #logs > 50 do table.remove(logs, 1) end
end

function M.drawLogs(x, y, logs, count, color, logOffset)
    if type(logs) ~= "table" then
        error("Неверный аргумент: logs должен быть таблицей")
    end
    count = count or 10
    color = color or 0x8BE9FD
    logOffset = logOffset or 0
    local logY = y
    local startIdx = math.max(1, #logs - count + 1 - logOffset)
    local endIdx = math.min(#logs, startIdx + count - 1)
    for i = startIdx, endIdx do
        M.drawText(x, logY, logs[i], color)
        logY = logY + 1
    end
    -- Очищаем оставшиеся строки, если логов меньше, чем count
    for i = logY, y + count - 1 do
        M.drawText(x, i, string.rep(" ", 100), color)
    end
end

function M.roundRect(x, y, w, h, borderColor, bgColor)
    if type(x) ~= "number" or type(y) ~= "number" or type(w) ~= "number" or type(h) ~= "number" then
        error("Неверные аргументы: x, y, w, h - числа")
    end
    gpu.setBackground(borderColor)
    gpu.fill(x, y, w, h, " ")
    gpu.setBackground(bgColor)
    gpu.fill(x + 1, y + 1, w - 2, h - 2, " ")
end

function M.drawButton(x, y, w, h, text, buttonColor, textColor, subText, subTextColor)
    if type(x) ~= "number" or type(y) ~= "number" or type(w) ~= "number" or type(h) ~= "number" or type(text) ~= "string" then
        error("Неверные аргументы: x, y, w, h - числа, text - строка")
    end
    buttonColor = buttonColor or 0x00BFFF
    textColor = textColor or 0xFFFFFF
    gpu.setBackground(buttonColor)
    gpu.fill(x, y, w, h, " ")
    gpu.setForeground(textColor)
    local textWidth = unicode.len(text)
    local textX = x + math.floor((w - textWidth) / 2)
    local textY = y + math.floor((h - (subText and 2 or 1)) / 2)
    gpu.set(textX, textY, text)
    if subText then
        subTextColor = subTextColor or textColor
        gpu.setForeground(subTextColor)
        local subTextWidth = unicode.len(subText)
        local subTextX = x + math.floor((w - subTextWidth) / 2)
        local subTextY = textY + 1
        gpu.set(subTextX, subTextY, subText)
    end
end

function M.animatedButton(x, y, w, h, text, hover, buttonColor, buttonActiveColor, textColor, subText, subTextColor)
    if type(hover) ~= "boolean" then hover = false end
    local finalButtonColor = hover and buttonActiveColor or buttonColor
    M.drawButton(x, y, w, h, text, finalButtonColor, textColor, subText, subTextColor)
end

function M.progressBar(x, y, w, progress)
    if type(x) ~= "number" or type(y) ~= "number" or type(w) ~= "number" or type(progress) ~= "number" then
        error("Неверные аргументы: x, y, w, progress - числа")
    end
    progress = math.max(0, math.min(1, progress))
    local filledWidth = math.floor(w * progress)
    gpu.setBackground(0x50FA7B)
    gpu.fill(x, y, filledWidth, 1, " ")
    gpu.setBackground(0x44475a)
    gpu.fill(x + filledWidth, y, w - filledWidth, 1, " ")
end

return M
